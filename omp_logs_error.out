r11i5n4
--------------------------------------
/gpfswork/rech/ldr/urm38kd/workspace_yufei/ssl_cityscapes/obow_ssl_new/obow_ssl
--------------------------------------
/gpfswork/rech/ldr/urm38kd/workspace_yufei/ssl_cityscapes/obow_ssl_new/obow_ssl
--------------------------------------
--------------------------------------
Package                Version
---------------------- -------------------
ansible-cmdb           1.31
antlr4-python3-runtime 4.8
apex                   0.1
certifi                2020.12.5
chardet                4.0.0
cheroot                8.5.2
CherryPy               18.6.0
cycler                 0.10.0
faiss                  1.7.0
fvcore                 0.1.3.post20210223
gitdb                  4.0.7
GitPython              3.1.14
hydra-core             1.0.6
idna                   2.10
importlib-resources    5.1.2
iopath                 0.1.8
jaraco.classes         3.2.1
jaraco.collections     3.3.0
jaraco.functools       3.3.0
jaraco.text            3.5.0
joblib                 1.0.1
jsonpatch              1.32
jsonpointer            2.1
jsonxs                 0.6
kiwisolver             1.3.1
Mako                   1.1.4
MarkupSafe             1.1.1
matplotlib             3.4.1
mkl-fft                1.3.0
mkl-random             1.1.1
mkl-service            2.3.0
more-itertools         8.7.0
numpy                  1.19.2
olefile                0.46
omegaconf              2.0.6
parameterized          0.8.1
Pillow                 8.2.0
pip                    21.0.1
portalocker            1.7.0
portend                2.7.1
pyparsing              2.4.7
python-dateutil        2.8.1
pytz                   2021.1
PyYAML                 5.3.1
pyzmq                  22.0.3
requests               2.25.1
scikit-learn           0.24.1
scipy                  1.6.2
setuptools             52.0.0.post20210125
six                    1.15.0
smmap                  4.0.0
tabulate               0.8.9
tempora                4.0.2
termcolor              1.1.0
threadpoolctl          2.1.0
timedelta              2020.12.3
torch                  1.7.1
torchfile              0.1.0
torchvision            0.8.2
tornado                6.1
tqdm                   4.60.0
typing                 3.7.4.3
typing-extensions      3.7.4.3
urllib3                1.26.4
ushlex                 0.99.1
visdom                 0.1.8.9
vissl                  0.1.5
websocket-client       0.58.0
wget                   3.2
wheel                  0.36.2
yacs                   0.1.6
zc.lockfile            2.0
Loading experiment /gpfsdswork/projects/rech/ldr/urm38kd/workspace_yufei/ssl_cityscapes/obow_ssl_new/obow_ssl/config/cityscapes/ResNet50_OBoW_cityscapes.yaml
Logs and/or checkpoints will be stored on experiments/cityscapes/ResNet50_OBoW_cityscapes
2021-06-09 17:29:43,160 - obow.solver - INFO   - Initialize solver: {'optim_type': 'sgd', 'momentum': 0.9, 'weight_decay': 0.0001, 'nesterov': False, 'num_epochs': 200, 'lr': 0.03, 'end_lr': 3e-05, 'lr_schedule_type': 'cos_warmup', 'warmup_epochs': 10, 'permanent': 10}
2021-06-09 17:29:43,161 - obow.solver - INFO   - Initialize optimizer
2021-06-09 17:29:43,164 - obow.solver - INFO   - Start training from epoch 0
2021-06-09 17:29:43,164 - obow.solver - INFO   - Training epoch: [1/200] (ResNet50_OBoW_cityscapes)
2021-06-09 17:29:43,164 - obow.solver - INFO   - Setting epoch=0 for distributed sampling.
2021-06-09 17:29:43,164 - obow.solver - INFO   - ==> Set lr for group 0: 0.0000000000
2021-06-09 17:29:43,177 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.0.Conv.weight: [PASSED]
2021-06-09 17:29:43,178 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.0.bn.weight: [PASSED]
2021-06-09 17:29:43,179 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.0.bn.bias: [PASSED]
2021-06-09 17:29:43,179 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.1.0.conv1.weight: [PASSED]
2021-06-09 17:29:43,180 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.1.0.bn1.weight: [PASSED]
2021-06-09 17:29:43,183 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.1.0.bn1.bias: [PASSED]
2021-06-09 17:29:43,186 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.1.0.conv2.weight: [PASSED]
2021-06-09 17:29:43,186 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.1.0.bn2.weight: [PASSED]
2021-06-09 17:29:43,187 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.1.0.bn2.bias: [PASSED]
2021-06-09 17:29:43,188 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.1.0.conv3.weight: [PASSED]
2021-06-09 17:29:43,189 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.1.0.bn3.weight: [PASSED]
2021-06-09 17:29:43,190 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.1.0.bn3.bias: [PASSED]
2021-06-09 17:29:43,191 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.1.0.downsample.0.weight: [PASSED]
2021-06-09 17:29:43,191 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.1.0.downsample.1.weight: [PASSED]
2021-06-09 17:29:43,192 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.1.0.downsample.1.bias: [PASSED]
2021-06-09 17:29:43,193 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.1.1.conv1.weight: [PASSED]
2021-06-09 17:29:43,194 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.1.1.bn1.weight: [PASSED]
2021-06-09 17:29:43,195 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.1.1.bn1.bias: [PASSED]
2021-06-09 17:29:43,195 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.1.1.conv2.weight: [PASSED]
2021-06-09 17:29:43,196 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.1.1.bn2.weight: [PASSED]
2021-06-09 17:29:43,197 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.1.1.bn2.bias: [PASSED]
2021-06-09 17:29:43,198 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.1.1.conv3.weight: [PASSED]
2021-06-09 17:29:43,199 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.1.1.bn3.weight: [PASSED]
2021-06-09 17:29:43,199 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.1.1.bn3.bias: [PASSED]
2021-06-09 17:29:43,200 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.1.2.conv1.weight: [PASSED]
2021-06-09 17:29:43,201 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.1.2.bn1.weight: [PASSED]
2021-06-09 17:29:43,202 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.1.2.bn1.bias: [PASSED]
2021-06-09 17:29:43,203 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.1.2.conv2.weight: [PASSED]
2021-06-09 17:29:43,203 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.1.2.bn2.weight: [PASSED]
2021-06-09 17:29:43,204 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.1.2.bn2.bias: [PASSED]
2021-06-09 17:29:43,205 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.1.2.conv3.weight: [PASSED]
2021-06-09 17:29:43,206 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.1.2.bn3.weight: [PASSED]
2021-06-09 17:29:43,207 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.1.2.bn3.bias: [PASSED]
2021-06-09 17:29:43,208 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.2.0.conv1.weight: [PASSED]
2021-06-09 17:29:43,208 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.2.0.bn1.weight: [PASSED]
2021-06-09 17:29:43,209 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.2.0.bn1.bias: [PASSED]
2021-06-09 17:29:43,211 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.2.0.conv2.weight: [PASSED]
2021-06-09 17:29:43,212 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.2.0.bn2.weight: [PASSED]
2021-06-09 17:29:43,212 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.2.0.bn2.bias: [PASSED]
2021-06-09 17:29:43,213 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.2.0.conv3.weight: [PASSED]
2021-06-09 17:29:43,214 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.2.0.bn3.weight: [PASSED]
2021-06-09 17:29:43,215 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.2.0.bn3.bias: [PASSED]
2021-06-09 17:29:43,216 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.2.0.downsample.0.weight: [PASSED]
2021-06-09 17:29:43,216 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.2.0.downsample.1.weight: [PASSED]
2021-06-09 17:29:43,217 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.2.0.downsample.1.bias: [PASSED]
2021-06-09 17:29:43,218 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.2.1.conv1.weight: [PASSED]
2021-06-09 17:29:43,222 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.2.1.bn1.weight: [PASSED]
2021-06-09 17:29:43,222 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.2.1.bn1.bias: [PASSED]
2021-06-09 17:29:43,223 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.2.1.conv2.weight: [PASSED]
2021-06-09 17:29:43,224 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.2.1.bn2.weight: [PASSED]
2021-06-09 17:29:43,225 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.2.1.bn2.bias: [PASSED]
2021-06-09 17:29:43,226 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.2.1.conv3.weight: [PASSED]
2021-06-09 17:29:43,226 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.2.1.bn3.weight: [PASSED]
2021-06-09 17:29:43,227 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.2.1.bn3.bias: [PASSED]
2021-06-09 17:29:43,228 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.2.2.conv1.weight: [PASSED]
2021-06-09 17:29:43,229 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.2.2.bn1.weight: [PASSED]
2021-06-09 17:29:43,230 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.2.2.bn1.bias: [PASSED]
2021-06-09 17:29:43,231 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.2.2.conv2.weight: [PASSED]
2021-06-09 17:29:43,231 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.2.2.bn2.weight: [PASSED]
2021-06-09 17:29:43,232 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.2.2.bn2.bias: [PASSED]
2021-06-09 17:29:43,233 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.2.2.conv3.weight: [PASSED]
2021-06-09 17:29:43,234 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.2.2.bn3.weight: [PASSED]
2021-06-09 17:29:43,235 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.2.2.bn3.bias: [PASSED]
2021-06-09 17:29:43,235 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.2.3.conv1.weight: [PASSED]
2021-06-09 17:29:43,236 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.2.3.bn1.weight: [PASSED]
2021-06-09 17:29:43,237 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.2.3.bn1.bias: [PASSED]
2021-06-09 17:29:43,238 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.2.3.conv2.weight: [PASSED]
2021-06-09 17:29:43,239 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.2.3.bn2.weight: [PASSED]
2021-06-09 17:29:43,239 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.2.3.bn2.bias: [PASSED]
2021-06-09 17:29:43,240 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.2.3.conv3.weight: [PASSED]
2021-06-09 17:29:43,241 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.2.3.bn3.weight: [PASSED]
2021-06-09 17:29:43,242 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.2.3.bn3.bias: [PASSED]
2021-06-09 17:29:43,243 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.3.0.conv1.weight: [PASSED]
2021-06-09 17:29:43,244 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.3.0.bn1.weight: [PASSED]
2021-06-09 17:29:43,244 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.3.0.bn1.bias: [PASSED]
2021-06-09 17:29:43,245 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.3.0.conv2.weight: [PASSED]
2021-06-09 17:29:43,246 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.3.0.bn2.weight: [PASSED]
2021-06-09 17:29:43,247 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.3.0.bn2.bias: [PASSED]
2021-06-09 17:29:43,249 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.3.0.conv3.weight: [PASSED]
2021-06-09 17:29:43,249 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.3.0.bn3.weight: [PASSED]
2021-06-09 17:29:43,250 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.3.0.bn3.bias: [PASSED]
2021-06-09 17:29:43,251 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.3.0.downsample.0.weight: [PASSED]
2021-06-09 17:29:43,252 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.3.0.downsample.1.weight: [PASSED]
2021-06-09 17:29:43,253 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.3.0.downsample.1.bias: [PASSED]
2021-06-09 17:29:43,253 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.3.1.conv1.weight: [PASSED]
2021-06-09 17:29:43,254 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.3.1.bn1.weight: [PASSED]
2021-06-09 17:29:43,255 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.3.1.bn1.bias: [PASSED]
2021-06-09 17:29:43,256 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.3.1.conv2.weight: [PASSED]
2021-06-09 17:29:43,257 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.3.1.bn2.weight: [PASSED]
2021-06-09 17:29:43,258 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.3.1.bn2.bias: [PASSED]
2021-06-09 17:29:43,258 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.3.1.conv3.weight: [PASSED]
2021-06-09 17:29:43,259 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.3.1.bn3.weight: [PASSED]
2021-06-09 17:29:43,260 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.3.1.bn3.bias: [PASSED]
2021-06-09 17:29:43,261 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.3.2.conv1.weight: [PASSED]
2021-06-09 17:29:43,262 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.3.2.bn1.weight: [PASSED]
2021-06-09 17:29:43,262 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.3.2.bn1.bias: [PASSED]
2021-06-09 17:29:43,263 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.3.2.conv2.weight: [PASSED]
2021-06-09 17:29:43,264 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.3.2.bn2.weight: [PASSED]
2021-06-09 17:29:43,265 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.3.2.bn2.bias: [PASSED]
2021-06-09 17:29:43,266 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.3.2.conv3.weight: [PASSED]
2021-06-09 17:29:43,267 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.3.2.bn3.weight: [PASSED]
2021-06-09 17:29:43,267 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.3.2.bn3.bias: [PASSED]
2021-06-09 17:29:43,268 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.3.3.conv1.weight: [PASSED]
2021-06-09 17:29:43,269 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.3.3.bn1.weight: [PASSED]
2021-06-09 17:29:43,270 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.3.3.bn1.bias: [PASSED]
2021-06-09 17:29:43,271 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.3.3.conv2.weight: [PASSED]
2021-06-09 17:29:43,272 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.3.3.bn2.weight: [PASSED]
2021-06-09 17:29:43,272 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.3.3.bn2.bias: [PASSED]
2021-06-09 17:29:43,273 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.3.3.conv3.weight: [PASSED]
2021-06-09 17:29:43,274 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.3.3.bn3.weight: [PASSED]
2021-06-09 17:29:43,275 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.3.3.bn3.bias: [PASSED]
2021-06-09 17:29:43,276 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.3.4.conv1.weight: [PASSED]
2021-06-09 17:29:43,276 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.3.4.bn1.weight: [PASSED]
2021-06-09 17:29:43,277 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.3.4.bn1.bias: [PASSED]
2021-06-09 17:29:43,278 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.3.4.conv2.weight: [PASSED]
2021-06-09 17:29:43,279 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.3.4.bn2.weight: [PASSED]
2021-06-09 17:29:43,280 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.3.4.bn2.bias: [PASSED]
2021-06-09 17:29:43,281 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.3.4.conv3.weight: [PASSED]
2021-06-09 17:29:43,281 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.3.4.bn3.weight: [PASSED]
2021-06-09 17:29:43,282 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.3.4.bn3.bias: [PASSED]
2021-06-09 17:29:43,283 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.3.5.conv1.weight: [PASSED]
2021-06-09 17:29:43,284 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.3.5.bn1.weight: [PASSED]
2021-06-09 17:29:43,285 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.3.5.bn1.bias: [PASSED]
2021-06-09 17:29:43,286 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.3.5.conv2.weight: [PASSED]
2021-06-09 17:29:43,286 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.3.5.bn2.weight: [PASSED]
2021-06-09 17:29:43,287 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.3.5.bn2.bias: [PASSED]
2021-06-09 17:29:43,288 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.3.5.conv3.weight: [PASSED]
2021-06-09 17:29:43,289 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.3.5.bn3.weight: [PASSED]
2021-06-09 17:29:43,290 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.3.5.bn3.bias: [PASSED]
2021-06-09 17:29:43,290 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.4.0.conv1.weight: [PASSED]
2021-06-09 17:29:43,291 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.4.0.bn1.weight: [PASSED]
2021-06-09 17:29:43,292 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.4.0.bn1.bias: [PASSED]
2021-06-09 17:29:43,293 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.4.0.conv2.weight: [PASSED]
2021-06-09 17:29:43,294 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.4.0.bn2.weight: [PASSED]
2021-06-09 17:29:43,295 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.4.0.bn2.bias: [PASSED]
2021-06-09 17:29:43,296 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.4.0.conv3.weight: [PASSED]
2021-06-09 17:29:43,296 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.4.0.bn3.weight: [PASSED]
2021-06-09 17:29:43,297 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.4.0.bn3.bias: [PASSED]
2021-06-09 17:29:43,298 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.4.0.downsample.0.weight: [PASSED]
2021-06-09 17:29:43,299 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.4.0.downsample.1.weight: [PASSED]
2021-06-09 17:29:43,300 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.4.0.downsample.1.bias: [PASSED]
2021-06-09 17:29:43,301 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.4.1.conv1.weight: [PASSED]
2021-06-09 17:29:43,302 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.4.1.bn1.weight: [PASSED]
2021-06-09 17:29:43,302 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.4.1.bn1.bias: [PASSED]
2021-06-09 17:29:43,303 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.4.1.conv2.weight: [PASSED]
2021-06-09 17:29:43,304 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.4.1.bn2.weight: [PASSED]
2021-06-09 17:29:43,305 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.4.1.bn2.bias: [PASSED]
2021-06-09 17:29:43,306 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.4.1.conv3.weight: [PASSED]
2021-06-09 17:29:43,307 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.4.1.bn3.weight: [PASSED]
2021-06-09 17:29:43,308 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.4.1.bn3.bias: [PASSED]
2021-06-09 17:29:43,308 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.4.2.conv1.weight: [PASSED]
2021-06-09 17:29:43,309 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.4.2.bn1.weight: [PASSED]
2021-06-09 17:29:43,310 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.4.2.bn1.bias: [PASSED]
2021-06-09 17:29:43,311 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.4.2.conv2.weight: [PASSED]
2021-06-09 17:29:43,312 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.4.2.bn2.weight: [PASSED]
2021-06-09 17:29:43,313 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.4.2.bn2.bias: [PASSED]
2021-06-09 17:29:43,314 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.4.2.conv3.weight: [PASSED]
2021-06-09 17:29:43,314 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.4.2.bn3.weight: [PASSED]
2021-06-09 17:29:43,315 - obow.utils - INFO   - ====> Check module.feature_extractor._feature_blocks.4.2.bn3.bias: [PASSED]
2021-06-09 17:29:43,316 - obow.utils - INFO   - ====> Check module.bow_predictor.scale: [PASSED]
2021-06-09 17:29:43,317 - obow.utils - INFO   - ====> Check module.bow_predictor.layers_w.0.b0_fc.weight: [PASSED]
2021-06-09 17:29:43,318 - obow.utils - INFO   - ====> Check module.bow_predictor.layers_w.0.b0_bn.weight: [PASSED]
2021-06-09 17:29:43,319 - obow.utils - INFO   - ====> Check module.bow_predictor.layers_w.0.b0_bn.bias: [PASSED]
2021-06-09 17:29:43,321 - obow.utils - INFO   - ====> Check module.bow_predictor.layers_w.0.b0_last_layer.weight: [PASSED]
2021-06-09 17:29:43,322 - obow.utils - INFO   - ====> Check module.bow_predictor.layers_w.0.b0_last_layer.bias: [PASSED]
2021-06-09 17:29:43,324 - obow.utils - INFO   - ====> Check module.bow_predictor.layers_w.1.b1_fc.weight: [PASSED]
2021-06-09 17:29:43,325 - obow.utils - INFO   - ====> Check module.bow_predictor.layers_w.1.b1_bn.weight: [PASSED]
2021-06-09 17:29:43,326 - obow.utils - INFO   - ====> Check module.bow_predictor.layers_w.1.b1_bn.bias: [PASSED]
2021-06-09 17:29:43,328 - obow.utils - INFO   - ====> Check module.bow_predictor.layers_w.1.b1_last_layer.weight: [PASSED]
2021-06-09 17:29:43,329 - obow.utils - INFO   - ====> Check module.bow_predictor.layers_w.1.b1_last_layer.bias: [PASSED]
2021-06-09 17:29:43,329 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.0.Conv.weight: [PASSED]
2021-06-09 17:29:43,330 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.0.bn.weight: [PASSED]
2021-06-09 17:29:43,331 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.0.bn.bias: [PASSED]
2021-06-09 17:29:43,332 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.1.0.conv1.weight: [PASSED]
2021-06-09 17:29:43,333 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.1.0.bn1.weight: [PASSED]
2021-06-09 17:29:43,333 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.1.0.bn1.bias: [PASSED]
2021-06-09 17:29:43,334 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.1.0.conv2.weight: [PASSED]
2021-06-09 17:29:43,335 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.1.0.bn2.weight: [PASSED]
2021-06-09 17:29:43,336 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.1.0.bn2.bias: [PASSED]
2021-06-09 17:29:43,337 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.1.0.conv3.weight: [PASSED]
2021-06-09 17:29:43,337 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.1.0.bn3.weight: [PASSED]
2021-06-09 17:29:43,338 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.1.0.bn3.bias: [PASSED]
2021-06-09 17:29:43,339 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.1.0.downsample.0.weight: [PASSED]
2021-06-09 17:29:43,340 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.1.0.downsample.1.weight: [PASSED]
2021-06-09 17:29:43,341 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.1.0.downsample.1.bias: [PASSED]
2021-06-09 17:29:43,341 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.1.1.conv1.weight: [PASSED]
2021-06-09 17:29:43,342 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.1.1.bn1.weight: [PASSED]
2021-06-09 17:29:43,343 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.1.1.bn1.bias: [PASSED]
2021-06-09 17:29:43,344 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.1.1.conv2.weight: [PASSED]
2021-06-09 17:29:43,345 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.1.1.bn2.weight: [PASSED]
2021-06-09 17:29:43,345 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.1.1.bn2.bias: [PASSED]
2021-06-09 17:29:43,346 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.1.1.conv3.weight: [PASSED]
2021-06-09 17:29:43,347 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.1.1.bn3.weight: [PASSED]
2021-06-09 17:29:43,348 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.1.1.bn3.bias: [PASSED]
2021-06-09 17:29:43,349 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.1.2.conv1.weight: [PASSED]
2021-06-09 17:29:43,349 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.1.2.bn1.weight: [PASSED]
2021-06-09 17:29:43,350 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.1.2.bn1.bias: [PASSED]
2021-06-09 17:29:43,351 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.1.2.conv2.weight: [PASSED]
2021-06-09 17:29:43,352 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.1.2.bn2.weight: [PASSED]
2021-06-09 17:29:43,353 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.1.2.bn2.bias: [PASSED]
2021-06-09 17:29:43,353 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.1.2.conv3.weight: [PASSED]
2021-06-09 17:29:43,354 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.1.2.bn3.weight: [PASSED]
2021-06-09 17:29:43,355 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.1.2.bn3.bias: [PASSED]
2021-06-09 17:29:43,356 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.2.0.conv1.weight: [PASSED]
2021-06-09 17:29:43,357 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.2.0.bn1.weight: [PASSED]
2021-06-09 17:29:43,357 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.2.0.bn1.bias: [PASSED]
2021-06-09 17:29:43,358 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.2.0.conv2.weight: [PASSED]
2021-06-09 17:29:43,359 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.2.0.bn2.weight: [PASSED]
2021-06-09 17:29:43,360 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.2.0.bn2.bias: [PASSED]
2021-06-09 17:29:43,361 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.2.0.conv3.weight: [PASSED]
2021-06-09 17:29:43,362 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.2.0.bn3.weight: [PASSED]
2021-06-09 17:29:43,362 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.2.0.bn3.bias: [PASSED]
2021-06-09 17:29:43,363 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.2.0.downsample.0.weight: [PASSED]
2021-06-09 17:29:43,364 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.2.0.downsample.1.weight: [PASSED]
2021-06-09 17:29:43,365 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.2.0.downsample.1.bias: [PASSED]
2021-06-09 17:29:43,366 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.2.1.conv1.weight: [PASSED]
2021-06-09 17:29:43,366 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.2.1.bn1.weight: [PASSED]
2021-06-09 17:29:43,367 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.2.1.bn1.bias: [PASSED]
2021-06-09 17:29:43,368 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.2.1.conv2.weight: [PASSED]
2021-06-09 17:29:43,369 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.2.1.bn2.weight: [PASSED]
2021-06-09 17:29:43,370 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.2.1.bn2.bias: [PASSED]
2021-06-09 17:29:43,370 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.2.1.conv3.weight: [PASSED]
2021-06-09 17:29:43,371 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.2.1.bn3.weight: [PASSED]
2021-06-09 17:29:43,372 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.2.1.bn3.bias: [PASSED]
2021-06-09 17:29:43,373 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.2.2.conv1.weight: [PASSED]
2021-06-09 17:29:43,374 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.2.2.bn1.weight: [PASSED]
2021-06-09 17:29:43,374 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.2.2.bn1.bias: [PASSED]
2021-06-09 17:29:43,375 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.2.2.conv2.weight: [PASSED]
2021-06-09 17:29:43,376 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.2.2.bn2.weight: [PASSED]
2021-06-09 17:29:43,377 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.2.2.bn2.bias: [PASSED]
2021-06-09 17:29:43,378 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.2.2.conv3.weight: [PASSED]
2021-06-09 17:29:43,379 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.2.2.bn3.weight: [PASSED]
2021-06-09 17:29:43,379 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.2.2.bn3.bias: [PASSED]
2021-06-09 17:29:43,380 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.2.3.conv1.weight: [PASSED]
2021-06-09 17:29:43,381 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.2.3.bn1.weight: [PASSED]
2021-06-09 17:29:43,382 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.2.3.bn1.bias: [PASSED]
2021-06-09 17:29:43,383 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.2.3.conv2.weight: [PASSED]
2021-06-09 17:29:43,383 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.2.3.bn2.weight: [PASSED]
2021-06-09 17:29:43,384 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.2.3.bn2.bias: [PASSED]
2021-06-09 17:29:43,385 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.2.3.conv3.weight: [PASSED]
2021-06-09 17:29:43,386 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.2.3.bn3.weight: [PASSED]
2021-06-09 17:29:43,387 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.2.3.bn3.bias: [PASSED]
2021-06-09 17:29:43,387 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.3.0.conv1.weight: [PASSED]
2021-06-09 17:29:43,388 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.3.0.bn1.weight: [PASSED]
2021-06-09 17:29:43,389 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.3.0.bn1.bias: [PASSED]
2021-06-09 17:29:43,390 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.3.0.conv2.weight: [PASSED]
2021-06-09 17:29:43,391 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.3.0.bn2.weight: [PASSED]
2021-06-09 17:29:43,392 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.3.0.bn2.bias: [PASSED]
2021-06-09 17:29:43,392 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.3.0.conv3.weight: [PASSED]
2021-06-09 17:29:43,393 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.3.0.bn3.weight: [PASSED]
2021-06-09 17:29:43,394 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.3.0.bn3.bias: [PASSED]
2021-06-09 17:29:43,395 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.3.0.downsample.0.weight: [PASSED]
2021-06-09 17:29:43,396 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.3.0.downsample.1.weight: [PASSED]
2021-06-09 17:29:43,396 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.3.0.downsample.1.bias: [PASSED]
2021-06-09 17:29:43,397 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.3.1.conv1.weight: [PASSED]
2021-06-09 17:29:43,398 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.3.1.bn1.weight: [PASSED]
2021-06-09 17:29:43,399 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.3.1.bn1.bias: [PASSED]
2021-06-09 17:29:43,400 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.3.1.conv2.weight: [PASSED]
2021-06-09 17:29:43,401 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.3.1.bn2.weight: [PASSED]
2021-06-09 17:29:43,401 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.3.1.bn2.bias: [PASSED]
2021-06-09 17:29:43,402 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.3.1.conv3.weight: [PASSED]
2021-06-09 17:29:43,403 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.3.1.bn3.weight: [PASSED]
2021-06-09 17:29:43,404 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.3.1.bn3.bias: [PASSED]
2021-06-09 17:29:43,405 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.3.2.conv1.weight: [PASSED]
2021-06-09 17:29:43,406 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.3.2.bn1.weight: [PASSED]
2021-06-09 17:29:43,406 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.3.2.bn1.bias: [PASSED]
2021-06-09 17:29:43,407 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.3.2.conv2.weight: [PASSED]
2021-06-09 17:29:43,408 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.3.2.bn2.weight: [PASSED]
2021-06-09 17:29:43,409 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.3.2.bn2.bias: [PASSED]
2021-06-09 17:29:43,410 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.3.2.conv3.weight: [PASSED]
2021-06-09 17:29:43,410 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.3.2.bn3.weight: [PASSED]
2021-06-09 17:29:43,411 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.3.2.bn3.bias: [PASSED]
2021-06-09 17:29:43,412 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.3.3.conv1.weight: [PASSED]
2021-06-09 17:29:43,413 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.3.3.bn1.weight: [PASSED]
2021-06-09 17:29:43,414 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.3.3.bn1.bias: [PASSED]
2021-06-09 17:29:43,415 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.3.3.conv2.weight: [PASSED]
2021-06-09 17:29:43,415 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.3.3.bn2.weight: [PASSED]
2021-06-09 17:29:43,416 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.3.3.bn2.bias: [PASSED]
2021-06-09 17:29:43,417 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.3.3.conv3.weight: [PASSED]
2021-06-09 17:29:43,418 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.3.3.bn3.weight: [PASSED]
2021-06-09 17:29:43,419 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.3.3.bn3.bias: [PASSED]
2021-06-09 17:29:43,419 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.3.4.conv1.weight: [PASSED]
2021-06-09 17:29:43,420 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.3.4.bn1.weight: [PASSED]
2021-06-09 17:29:43,421 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.3.4.bn1.bias: [PASSED]
2021-06-09 17:29:43,422 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.3.4.conv2.weight: [PASSED]
2021-06-09 17:29:43,423 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.3.4.bn2.weight: [PASSED]
2021-06-09 17:29:43,424 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.3.4.bn2.bias: [PASSED]
2021-06-09 17:29:43,424 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.3.4.conv3.weight: [PASSED]
2021-06-09 17:29:43,425 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.3.4.bn3.weight: [PASSED]
2021-06-09 17:29:43,426 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.3.4.bn3.bias: [PASSED]
2021-06-09 17:29:43,427 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.3.5.conv1.weight: [PASSED]
2021-06-09 17:29:43,428 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.3.5.bn1.weight: [PASSED]
2021-06-09 17:29:43,428 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.3.5.bn1.bias: [PASSED]
2021-06-09 17:29:43,429 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.3.5.conv2.weight: [PASSED]
2021-06-09 17:29:43,430 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.3.5.bn2.weight: [PASSED]
2021-06-09 17:29:43,431 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.3.5.bn2.bias: [PASSED]
2021-06-09 17:29:43,432 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.3.5.conv3.weight: [PASSED]
2021-06-09 17:29:43,433 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.3.5.bn3.weight: [PASSED]
2021-06-09 17:29:43,433 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.3.5.bn3.bias: [PASSED]
2021-06-09 17:29:43,434 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.4.0.conv1.weight: [PASSED]
2021-06-09 17:29:43,435 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.4.0.bn1.weight: [PASSED]
2021-06-09 17:29:43,436 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.4.0.bn1.bias: [PASSED]
2021-06-09 17:29:43,437 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.4.0.conv2.weight: [PASSED]
2021-06-09 17:29:43,438 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.4.0.bn2.weight: [PASSED]
2021-06-09 17:29:43,439 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.4.0.bn2.bias: [PASSED]
2021-06-09 17:29:43,439 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.4.0.conv3.weight: [PASSED]
2021-06-09 17:29:43,440 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.4.0.bn3.weight: [PASSED]
2021-06-09 17:29:43,441 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.4.0.bn3.bias: [PASSED]
2021-06-09 17:29:43,442 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.4.0.downsample.0.weight: [PASSED]
2021-06-09 17:29:43,443 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.4.0.downsample.1.weight: [PASSED]
2021-06-09 17:29:43,444 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.4.0.downsample.1.bias: [PASSED]
2021-06-09 17:29:43,445 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.4.1.conv1.weight: [PASSED]
2021-06-09 17:29:43,445 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.4.1.bn1.weight: [PASSED]
2021-06-09 17:29:43,446 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.4.1.bn1.bias: [PASSED]
2021-06-09 17:29:43,447 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.4.1.conv2.weight: [PASSED]
2021-06-09 17:29:43,448 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.4.1.bn2.weight: [PASSED]
2021-06-09 17:29:43,449 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.4.1.bn2.bias: [PASSED]
2021-06-09 17:29:43,450 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.4.1.conv3.weight: [PASSED]
2021-06-09 17:29:43,451 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.4.1.bn3.weight: [PASSED]
2021-06-09 17:29:43,451 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.4.1.bn3.bias: [PASSED]
2021-06-09 17:29:43,452 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.4.2.conv1.weight: [PASSED]
2021-06-09 17:29:43,453 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.4.2.bn1.weight: [PASSED]
2021-06-09 17:29:43,454 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.4.2.bn1.bias: [PASSED]
2021-06-09 17:29:43,455 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.4.2.conv2.weight: [PASSED]
2021-06-09 17:29:43,456 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.4.2.bn2.weight: [PASSED]
2021-06-09 17:29:43,456 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.4.2.bn2.bias: [PASSED]
2021-06-09 17:29:43,457 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.4.2.conv3.weight: [PASSED]
2021-06-09 17:29:43,458 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.4.2.bn3.weight: [PASSED]
2021-06-09 17:29:43,459 - obow.utils - INFO   - ====> Check module.feature_extractor_teacher._feature_blocks.4.2.bn3.bias: [PASSED]
2021-06-09 17:29:43,460 - obow.utils - INFO   - ====> Check module.linear_classifier.layers.prediction_layer.weight: [PASSED]
2021-06-09 17:29:43,461 - obow.utils - INFO   - ====> Check module.linear_classifier.layers.prediction_layer.bias: [PASSED]
2021-06-09 17:29:43,464 - obow.utils - INFO   - ====> Check module.bow_extractor.bow_extractor.0._embedding: [PASSED]
2021-06-09 17:29:43,468 - obow.utils - INFO   - ====> Check module.bow_extractor.bow_extractor.0._embedding_ptr: [PASSED]
2021-06-09 17:29:43,469 - obow.utils - INFO   - ====> Check module.bow_extractor.bow_extractor.0._track_num_batches: [PASSED]
2021-06-09 17:29:43,470 - obow.utils - INFO   - ====> Check module.bow_extractor.bow_extractor.0._min_distance_mean: [PASSED]
2021-06-09 17:29:43,475 - obow.utils - INFO   - ====> Check module.bow_extractor.bow_extractor.1._embedding: [PASSED]
2021-06-09 17:29:43,476 - obow.utils - INFO   - ====> Check module.bow_extractor.bow_extractor.1._embedding_ptr: [PASSED]
2021-06-09 17:29:43,477 - obow.utils - INFO   - ====> Check module.bow_extractor.bow_extractor.1._track_num_batches: [PASSED]
2021-06-09 17:29:43,478 - obow.utils - INFO   - ====> Check module.bow_extractor.bow_extractor.1._min_distance_mean: [PASSED]
2021-06-09 17:29:43,478 - obow.utils - INFO   - ==> Sanity checked [ALL PASSED]
2021-06-09 17:29:43,478 - obow.builder_obow - INFO   - alpha: 0.9900000095367432
main_worker(gpu=3 ngpus_per_node=4 args=Namespace(batch_size=256, config='cityscapes/ResNet50_OBoW_cityscapes', convert_to_torchvision=False, data_dir='../../MoCo_SSL_segmentation/data/cityscapes/', dist_backend='nccl', dist_url='tcp://127.0.0.1:4444', distributed=True, dst_dir='./experiments/', episodes=0, evaluate=False, exp_config={'model': {'alpha': 0.99, 'alpha_cosine': True, 'feature_extractor_arch': 'resnet50', 'feature_extractor_opts': {'global_pooling': True}, 'bow_levels': ['block3', 'block4'], 'bow_extractor_opts': {'inv_delta': 15, 'num_words': 8192}, 'bow_predictor_opts': {'kappa': 8}, 'num_classes': 34}, 'optim': {'optim_type': 'sgd', 'momentum': 0.9, 'weight_decay': 0.0001, 'nesterov': False, 'num_epochs': 200, 'lr': 0.03, 'end_lr': 3e-05, 'lr_schedule_type': 'cos_warmup', 'warmup_epochs': 10, 'permanent': 10}, 'data': {'dataset_name': 'CityScapes', 'epoch_size': None, 'subset': None, 'cjitter': [0.4, 0.4, 0.4, 0.1], 'cjitter_p': 0.8, 'gray_p': 0.2, 'gaussian_blur': [0.1, 2.0], 'gaussian_blur_p': 0.5, 'num_img_crops': 2, 'image_crop_size': 160, 'image_crop_range': [0.08, 0.6], 'num_img_patches': 5, 'img_patch_preresize': 256, 'img_patch_preresize_range': [0.6, 1.0], 'img_patch_size': 96, 'img_patch_jitter': 24, 'only_patches': False}}, exp_dir=PosixPath('experiments/cityscapes/ResNet50_OBoW_cityscapes'), fewshot_k=[1], fewshot_n=50, fewshot_q=1, gpu=None, multiprocessing_distributed=True, print_freq=250, rank=0, seed=None, start_epoch=0, visualize_words=False, workers=32, world_size=1))
==> Use GPU: 3 for training.
Rank=0: workers=8 batch_size=64
Image transforms during training: ParallelTransforms([
Transform #0:
Compose(
    Resize(size=256, interpolation=PIL.Image.BILINEAR)
    CenterCrop(size=(224, 224))
    RandomHorizontalFlip(p=0.5)
    ToTensor()
    Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
), 
Transform #1:
StackMultipleViews(2 x 
Compose(
    RandomResizedCrop(size=(160, 160), scale=(0.08, 0.6), ratio=(0.75, 1.3333), interpolation=PIL.Image.BILINEAR)
    RandomApply(
    p=0.8
    ColorJitter(brightness=[0.6, 1.4], contrast=[0.6, 1.4], saturation=[0.6, 1.4], hue=[-0.1, 0.1])
)
    RandomGrayscale(p=0.2)
    RandomApply(
    p=0.5
    GaussianBlur(sigma=[0.1, 2.0])
)
    RandomHorizontalFlip(p=0.5)
    ToTensor()
    Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
)), 
Transform #2:
Compose(
    RandomResizedCrop(size=(256, 256), scale=(0.6, 1.0), ratio=(0.75, 1.3333), interpolation=PIL.Image.BILINEAR)
    RandomApply(
    p=0.8
    ColorJitter(brightness=[0.6, 1.4], contrast=[0.6, 1.4], saturation=[0.6, 1.4], hue=[-0.1, 0.1])
)
    RandomGrayscale(p=0.2)
    RandomHorizontalFlip(p=0.5)
    ToTensor()
    Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
    CropImagePatches(split_per_side=3, patch_size=96, patch_jitter=24, num_patches=5/9)
), 
])
Image transforms during testing: ParallelTransforms([
Transform #0:
Compose(
    Resize(size=256, interpolation=PIL.Image.BILINEAR)
    CenterCrop(size=(224, 224))
    ToTensor()
    Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
), 
])
Loading data.
Creating data loaders
Creating an OBoW model with opts: {'alpha': 0.99, 'alpha_cosine': True, 'feature_extractor_arch': 'resnet50', 'feature_extractor_opts': {'global_pooling': True}, 'bow_levels': ['block3', 'block4'], 'bow_extractor_opts': {'inv_delta': 15, 'num_words': 8192}, 'bow_predictor_opts': {'kappa': 8}, 'num_classes': 34}
==> Pretrained parameters: False
Use synchronized BN for the feature extractors.
Model:
DistributedDataParallel(
  (module): OBoW(
    (feature_extractor): ResNet(
      (_feature_blocks): ModuleList(
        (0): Sequential(
          (Conv): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
          (bn): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
        )
        (1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (downsample): Sequential(
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
        )
        (2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (downsample): Sequential(
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
              (1): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
        )
        (3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (downsample): Sequential(
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)
              (1): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
        )
        (4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (downsample): Sequential(
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)
              (1): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
        )
        (5): GlobalPooling(type=avg)
      )
    )
    (bow_predictor): BoWPredictor(
      (kappa, learnable=False): [8.0, 8.0]
      (layers_w): ModuleList(
        (0): Sequential(
          (b0_l2norm_in): L2Normalize()
          (b0_fc): Linear(in_features=1024, out_features=4096, bias=False)
          (b0_bn): BatchNorm1d(4096, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (b0_rl): ReLU(inplace=True)
          (b0_last_layer): Linear(in_features=4096, out_features=2048, bias=True)
          (b0_l2norm_out): L2Normalize()
        )
        (1): Sequential(
          (b1_l2norm_in): L2Normalize()
          (b1_fc): Linear(in_features=2048, out_features=4096, bias=False)
          (b1_bn): BatchNorm1d(4096, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (b1_rl): ReLU(inplace=True)
          (b1_last_layer): Linear(in_features=4096, out_features=2048, bias=True)
          (b1_l2norm_out): L2Normalize()
        )
      )
    )
    (feature_extractor_teacher): ResNet(
      (_feature_blocks): ModuleList(
        (0): Sequential(
          (Conv): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
          (bn): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
        )
        (1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (downsample): Sequential(
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
        )
        (2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (downsample): Sequential(
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
              (1): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
        )
        (3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (downsample): Sequential(
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)
              (1): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
        )
        (4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (downsample): Sequential(
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)
              (1): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
        )
        (5): GlobalPooling(type=avg)
      )
    )
    (bow_extractor): BoWExtractorMultipleLevels(
      (bow_extractor): ModuleList(
        (0): BoWExtractor(num_words=8192, num_channels=1024, update_type=local_average, inv_delta=15, pool=max, decay=0.99, track_num_batches=0.0)
        (1): BoWExtractor(num_words=8192, num_channels=2048, update_type=local_average, inv_delta=15, pool=max, decay=0.99, track_num_batches=0.0)
      )
    )
    (linear_classifier): PredictionHead(
      (layers): Sequential(
        (pooling): GlobalPooling(type=avg)
        (batch_norm): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
        (flattening): Flatten(start_dim=1, end_dim=-1)
        (prediction_layer): Linear(in_features=2048, out_features=34, bias=True)
      )
    )
  )
)
main_worker(gpu=1 ngpus_per_node=4 args=Namespace(batch_size=256, config='cityscapes/ResNet50_OBoW_cityscapes', convert_to_torchvision=False, data_dir='../../MoCo_SSL_segmentation/data/cityscapes/', dist_backend='nccl', dist_url='tcp://127.0.0.1:4444', distributed=True, dst_dir='./experiments/', episodes=0, evaluate=False, exp_config={'model': {'alpha': 0.99, 'alpha_cosine': True, 'feature_extractor_arch': 'resnet50', 'feature_extractor_opts': {'global_pooling': True}, 'bow_levels': ['block3', 'block4'], 'bow_extractor_opts': {'inv_delta': 15, 'num_words': 8192}, 'bow_predictor_opts': {'kappa': 8}, 'num_classes': 34}, 'optim': {'optim_type': 'sgd', 'momentum': 0.9, 'weight_decay': 0.0001, 'nesterov': False, 'num_epochs': 200, 'lr': 0.03, 'end_lr': 3e-05, 'lr_schedule_type': 'cos_warmup', 'warmup_epochs': 10, 'permanent': 10}, 'data': {'dataset_name': 'CityScapes', 'epoch_size': None, 'subset': None, 'cjitter': [0.4, 0.4, 0.4, 0.1], 'cjitter_p': 0.8, 'gray_p': 0.2, 'gaussian_blur': [0.1, 2.0], 'gaussian_blur_p': 0.5, 'num_img_crops': 2, 'image_crop_size': 160, 'image_crop_range': [0.08, 0.6], 'num_img_patches': 5, 'img_patch_preresize': 256, 'img_patch_preresize_range': [0.6, 1.0], 'img_patch_size': 96, 'img_patch_jitter': 24, 'only_patches': False}}, exp_dir=PosixPath('experiments/cityscapes/ResNet50_OBoW_cityscapes'), fewshot_k=[1], fewshot_n=50, fewshot_q=1, gpu=None, multiprocessing_distributed=True, print_freq=250, rank=0, seed=None, start_epoch=0, visualize_words=False, workers=32, world_size=1))
==> Use GPU: 1 for training.
Rank=0: workers=8 batch_size=64
Image transforms during training: ParallelTransforms([
Transform #0:
Compose(
    Resize(size=256, interpolation=PIL.Image.BILINEAR)
    CenterCrop(size=(224, 224))
    RandomHorizontalFlip(p=0.5)
    ToTensor()
    Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
), 
Transform #1:
StackMultipleViews(2 x 
Compose(
    RandomResizedCrop(size=(160, 160), scale=(0.08, 0.6), ratio=(0.75, 1.3333), interpolation=PIL.Image.BILINEAR)
    RandomApply(
    p=0.8
    ColorJitter(brightness=[0.6, 1.4], contrast=[0.6, 1.4], saturation=[0.6, 1.4], hue=[-0.1, 0.1])
)
    RandomGrayscale(p=0.2)
    RandomApply(
    p=0.5
    GaussianBlur(sigma=[0.1, 2.0])
)
    RandomHorizontalFlip(p=0.5)
    ToTensor()
    Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
)), 
Transform #2:
Compose(
    RandomResizedCrop(size=(256, 256), scale=(0.6, 1.0), ratio=(0.75, 1.3333), interpolation=PIL.Image.BILINEAR)
    RandomApply(
    p=0.8
    ColorJitter(brightness=[0.6, 1.4], contrast=[0.6, 1.4], saturation=[0.6, 1.4], hue=[-0.1, 0.1])
)
    RandomGrayscale(p=0.2)
    RandomHorizontalFlip(p=0.5)
    ToTensor()
    Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
    CropImagePatches(split_per_side=3, patch_size=96, patch_jitter=24, num_patches=5/9)
), 
])
Image transforms during testing: ParallelTransforms([
Transform #0:
Compose(
    Resize(size=256, interpolation=PIL.Image.BILINEAR)
    CenterCrop(size=(224, 224))
    ToTensor()
    Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
), 
])
Loading data.
Creating data loaders
Creating an OBoW model with opts: {'alpha': 0.99, 'alpha_cosine': True, 'feature_extractor_arch': 'resnet50', 'feature_extractor_opts': {'global_pooling': True}, 'bow_levels': ['block3', 'block4'], 'bow_extractor_opts': {'inv_delta': 15, 'num_words': 8192}, 'bow_predictor_opts': {'kappa': 8}, 'num_classes': 34}
==> Pretrained parameters: False
Use synchronized BN for the feature extractors.
Model:
DistributedDataParallel(
  (module): OBoW(
    (feature_extractor): ResNet(
      (_feature_blocks): ModuleList(
        (0): Sequential(
          (Conv): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
          (bn): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
        )
        (1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (downsample): Sequential(
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
        )
        (2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (downsample): Sequential(
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
              (1): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
        )
        (3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (downsample): Sequential(
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)
              (1): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
        )
        (4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (downsample): Sequential(
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)
              (1): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
        )
        (5): GlobalPooling(type=avg)
      )
    )
    (bow_predictor): BoWPredictor(
      (kappa, learnable=False): [8.0, 8.0]
      (layers_w): ModuleList(
        (0): Sequential(
          (b0_l2norm_in): L2Normalize()
          (b0_fc): Linear(in_features=1024, out_features=4096, bias=False)
          (b0_bn): BatchNorm1d(4096, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (b0_rl): ReLU(inplace=True)
          (b0_last_layer): Linear(in_features=4096, out_features=2048, bias=True)
          (b0_l2norm_out): L2Normalize()
        )
        (1): Sequential(
          (b1_l2norm_in): L2Normalize()
          (b1_fc): Linear(in_features=2048, out_features=4096, bias=False)
          (b1_bn): BatchNorm1d(4096, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (b1_rl): ReLU(inplace=True)
          (b1_last_layer): Linear(in_features=4096, out_features=2048, bias=True)
          (b1_l2norm_out): L2Normalize()
        )
      )
    )
    (feature_extractor_teacher): ResNet(
      (_feature_blocks): ModuleList(
        (0): Sequential(
          (Conv): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
          (bn): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
        )
        (1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (downsample): Sequential(
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
        )
        (2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (downsample): Sequential(
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
              (1): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
        )
        (3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (downsample): Sequential(
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)
              (1): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
        )
        (4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (downsample): Sequential(
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)
              (1): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
        )
        (5): GlobalPooling(type=avg)
      )
    )
    (bow_extractor): BoWExtractorMultipleLevels(
      (bow_extractor): ModuleList(
        (0): BoWExtractor(num_words=8192, num_channels=1024, update_type=local_average, inv_delta=15, pool=max, decay=0.99, track_num_batches=0.0)
        (1): BoWExtractor(num_words=8192, num_channels=2048, update_type=local_average, inv_delta=15, pool=max, decay=0.99, track_num_batches=0.0)
      )
    )
    (linear_classifier): PredictionHead(
      (layers): Sequential(
        (pooling): GlobalPooling(type=avg)
        (batch_norm): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
        (flattening): Flatten(start_dim=1, end_dim=-1)
        (prediction_layer): Linear(in_features=2048, out_features=34, bias=True)
      )
    )
  )
)
main_worker(gpu=0 ngpus_per_node=4 args=Namespace(batch_size=256, config='cityscapes/ResNet50_OBoW_cityscapes', convert_to_torchvision=False, data_dir='../../MoCo_SSL_segmentation/data/cityscapes/', dist_backend='nccl', dist_url='tcp://127.0.0.1:4444', distributed=True, dst_dir='./experiments/', episodes=0, evaluate=False, exp_config={'model': {'alpha': 0.99, 'alpha_cosine': True, 'feature_extractor_arch': 'resnet50', 'feature_extractor_opts': {'global_pooling': True}, 'bow_levels': ['block3', 'block4'], 'bow_extractor_opts': {'inv_delta': 15, 'num_words': 8192}, 'bow_predictor_opts': {'kappa': 8}, 'num_classes': 34}, 'optim': {'optim_type': 'sgd', 'momentum': 0.9, 'weight_decay': 0.0001, 'nesterov': False, 'num_epochs': 200, 'lr': 0.03, 'end_lr': 3e-05, 'lr_schedule_type': 'cos_warmup', 'warmup_epochs': 10, 'permanent': 10}, 'data': {'dataset_name': 'CityScapes', 'epoch_size': None, 'subset': None, 'cjitter': [0.4, 0.4, 0.4, 0.1], 'cjitter_p': 0.8, 'gray_p': 0.2, 'gaussian_blur': [0.1, 2.0], 'gaussian_blur_p': 0.5, 'num_img_crops': 2, 'image_crop_size': 160, 'image_crop_range': [0.08, 0.6], 'num_img_patches': 5, 'img_patch_preresize': 256, 'img_patch_preresize_range': [0.6, 1.0], 'img_patch_size': 96, 'img_patch_jitter': 24, 'only_patches': False}}, exp_dir=PosixPath('experiments/cityscapes/ResNet50_OBoW_cityscapes'), fewshot_k=[1], fewshot_n=50, fewshot_q=1, gpu=None, multiprocessing_distributed=True, print_freq=250, rank=0, seed=None, start_epoch=0, visualize_words=False, workers=32, world_size=1))
==> Use GPU: 0 for training.
Rank=0: workers=8 batch_size=64
Image transforms during training: ParallelTransforms([
Transform #0:
Compose(
    Resize(size=256, interpolation=PIL.Image.BILINEAR)
    CenterCrop(size=(224, 224))
    RandomHorizontalFlip(p=0.5)
    ToTensor()
    Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
), 
Transform #1:
StackMultipleViews(2 x 
Compose(
    RandomResizedCrop(size=(160, 160), scale=(0.08, 0.6), ratio=(0.75, 1.3333), interpolation=PIL.Image.BILINEAR)
    RandomApply(
    p=0.8
    ColorJitter(brightness=[0.6, 1.4], contrast=[0.6, 1.4], saturation=[0.6, 1.4], hue=[-0.1, 0.1])
)
    RandomGrayscale(p=0.2)
    RandomApply(
    p=0.5
    GaussianBlur(sigma=[0.1, 2.0])
)
    RandomHorizontalFlip(p=0.5)
    ToTensor()
    Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
)), 
Transform #2:
Compose(
    RandomResizedCrop(size=(256, 256), scale=(0.6, 1.0), ratio=(0.75, 1.3333), interpolation=PIL.Image.BILINEAR)
    RandomApply(
    p=0.8
    ColorJitter(brightness=[0.6, 1.4], contrast=[0.6, 1.4], saturation=[0.6, 1.4], hue=[-0.1, 0.1])
)
    RandomGrayscale(p=0.2)
    RandomHorizontalFlip(p=0.5)
    ToTensor()
    Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
    CropImagePatches(split_per_side=3, patch_size=96, patch_jitter=24, num_patches=5/9)
), 
])
Image transforms during testing: ParallelTransforms([
Transform #0:
Compose(
    Resize(size=256, interpolation=PIL.Image.BILINEAR)
    CenterCrop(size=(224, 224))
    ToTensor()
    Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
), 
])
Loading data.
Creating data loaders
Creating an OBoW model with opts: {'alpha': 0.99, 'alpha_cosine': True, 'feature_extractor_arch': 'resnet50', 'feature_extractor_opts': {'global_pooling': True}, 'bow_levels': ['block3', 'block4'], 'bow_extractor_opts': {'inv_delta': 15, 'num_words': 8192}, 'bow_predictor_opts': {'kappa': 8}, 'num_classes': 34}
==> Pretrained parameters: False
Use synchronized BN for the feature extractors.
Model:
DistributedDataParallel(
  (module): OBoW(
    (feature_extractor): ResNet(
      (_feature_blocks): ModuleList(
        (0): Sequential(
          (Conv): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
          (bn): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
        )
        (1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (downsample): Sequential(
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
        )
        (2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (downsample): Sequential(
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
              (1): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
        )
        (3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (downsample): Sequential(
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)
              (1): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
        )
        (4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (downsample): Sequential(
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)
              (1): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
        )
        (5): GlobalPooling(type=avg)
      )
    )
    (bow_predictor): BoWPredictor(
      (kappa, learnable=False): [8.0, 8.0]
      (layers_w): ModuleList(
        (0): Sequential(
          (b0_l2norm_in): L2Normalize()
          (b0_fc): Linear(in_features=1024, out_features=4096, bias=False)
          (b0_bn): BatchNorm1d(4096, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (b0_rl): ReLU(inplace=True)
          (b0_last_layer): Linear(in_features=4096, out_features=2048, bias=True)
          (b0_l2norm_out): L2Normalize()
        )
        (1): Sequential(
          (b1_l2norm_in): L2Normalize()
          (b1_fc): Linear(in_features=2048, out_features=4096, bias=False)
          (b1_bn): BatchNorm1d(4096, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (b1_rl): ReLU(inplace=True)
          (b1_last_layer): Linear(in_features=4096, out_features=2048, bias=True)
          (b1_l2norm_out): L2Normalize()
        )
      )
    )
    (feature_extractor_teacher): ResNet(
      (_feature_blocks): ModuleList(
        (0): Sequential(
          (Conv): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
          (bn): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
        )
        (1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (downsample): Sequential(
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
        )
        (2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (downsample): Sequential(
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
              (1): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
        )
        (3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (downsample): Sequential(
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)
              (1): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
        )
        (4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (downsample): Sequential(
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)
              (1): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
        )
        (5): GlobalPooling(type=avg)
      )
    )
    (bow_extractor): BoWExtractorMultipleLevels(
      (bow_extractor): ModuleList(
        (0): BoWExtractor(num_words=8192, num_channels=1024, update_type=local_average, inv_delta=15, pool=max, decay=0.99, track_num_batches=0.0)
        (1): BoWExtractor(num_words=8192, num_channels=2048, update_type=local_average, inv_delta=15, pool=max, decay=0.99, track_num_batches=0.0)
      )
    )
    (linear_classifier): PredictionHead(
      (layers): Sequential(
        (pooling): GlobalPooling(type=avg)
        (batch_norm): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
        (flattening): Flatten(start_dim=1, end_dim=-1)
        (prediction_layer): Linear(in_features=2048, out_features=34, bias=True)
      )
    )
  )
)
main_worker(gpu=2 ngpus_per_node=4 args=Namespace(batch_size=256, config='cityscapes/ResNet50_OBoW_cityscapes', convert_to_torchvision=False, data_dir='../../MoCo_SSL_segmentation/data/cityscapes/', dist_backend='nccl', dist_url='tcp://127.0.0.1:4444', distributed=True, dst_dir='./experiments/', episodes=0, evaluate=False, exp_config={'model': {'alpha': 0.99, 'alpha_cosine': True, 'feature_extractor_arch': 'resnet50', 'feature_extractor_opts': {'global_pooling': True}, 'bow_levels': ['block3', 'block4'], 'bow_extractor_opts': {'inv_delta': 15, 'num_words': 8192}, 'bow_predictor_opts': {'kappa': 8}, 'num_classes': 34}, 'optim': {'optim_type': 'sgd', 'momentum': 0.9, 'weight_decay': 0.0001, 'nesterov': False, 'num_epochs': 200, 'lr': 0.03, 'end_lr': 3e-05, 'lr_schedule_type': 'cos_warmup', 'warmup_epochs': 10, 'permanent': 10}, 'data': {'dataset_name': 'CityScapes', 'epoch_size': None, 'subset': None, 'cjitter': [0.4, 0.4, 0.4, 0.1], 'cjitter_p': 0.8, 'gray_p': 0.2, 'gaussian_blur': [0.1, 2.0], 'gaussian_blur_p': 0.5, 'num_img_crops': 2, 'image_crop_size': 160, 'image_crop_range': [0.08, 0.6], 'num_img_patches': 5, 'img_patch_preresize': 256, 'img_patch_preresize_range': [0.6, 1.0], 'img_patch_size': 96, 'img_patch_jitter': 24, 'only_patches': False}}, exp_dir=PosixPath('experiments/cityscapes/ResNet50_OBoW_cityscapes'), fewshot_k=[1], fewshot_n=50, fewshot_q=1, gpu=None, multiprocessing_distributed=True, print_freq=250, rank=0, seed=None, start_epoch=0, visualize_words=False, workers=32, world_size=1))
==> Use GPU: 2 for training.
Rank=0: workers=8 batch_size=64
Image transforms during training: ParallelTransforms([
Transform #0:
Compose(
    Resize(size=256, interpolation=PIL.Image.BILINEAR)
    CenterCrop(size=(224, 224))
    RandomHorizontalFlip(p=0.5)
    ToTensor()
    Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
), 
Transform #1:
StackMultipleViews(2 x 
Compose(
    RandomResizedCrop(size=(160, 160), scale=(0.08, 0.6), ratio=(0.75, 1.3333), interpolation=PIL.Image.BILINEAR)
    RandomApply(
    p=0.8
    ColorJitter(brightness=[0.6, 1.4], contrast=[0.6, 1.4], saturation=[0.6, 1.4], hue=[-0.1, 0.1])
)
    RandomGrayscale(p=0.2)
    RandomApply(
    p=0.5
    GaussianBlur(sigma=[0.1, 2.0])
)
    RandomHorizontalFlip(p=0.5)
    ToTensor()
    Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
)), 
Transform #2:
Compose(
    RandomResizedCrop(size=(256, 256), scale=(0.6, 1.0), ratio=(0.75, 1.3333), interpolation=PIL.Image.BILINEAR)
    RandomApply(
    p=0.8
    ColorJitter(brightness=[0.6, 1.4], contrast=[0.6, 1.4], saturation=[0.6, 1.4], hue=[-0.1, 0.1])
)
    RandomGrayscale(p=0.2)
    RandomHorizontalFlip(p=0.5)
    ToTensor()
    Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
    CropImagePatches(split_per_side=3, patch_size=96, patch_jitter=24, num_patches=5/9)
), 
])
Image transforms during testing: ParallelTransforms([
Transform #0:
Compose(
    Resize(size=256, interpolation=PIL.Image.BILINEAR)
    CenterCrop(size=(224, 224))
    ToTensor()
    Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
), 
])
Loading data.
Creating data loaders
Creating an OBoW model with opts: {'alpha': 0.99, 'alpha_cosine': True, 'feature_extractor_arch': 'resnet50', 'feature_extractor_opts': {'global_pooling': True}, 'bow_levels': ['block3', 'block4'], 'bow_extractor_opts': {'inv_delta': 15, 'num_words': 8192}, 'bow_predictor_opts': {'kappa': 8}, 'num_classes': 34}
==> Pretrained parameters: False
Use synchronized BN for the feature extractors.
Model:
DistributedDataParallel(
  (module): OBoW(
    (feature_extractor): ResNet(
      (_feature_blocks): ModuleList(
        (0): Sequential(
          (Conv): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
          (bn): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
        )
        (1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (downsample): Sequential(
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
        )
        (2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (downsample): Sequential(
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
              (1): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
        )
        (3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (downsample): Sequential(
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)
              (1): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
        )
        (4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (downsample): Sequential(
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)
              (1): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
        )
        (5): GlobalPooling(type=avg)
      )
    )
    (bow_predictor): BoWPredictor(
      (kappa, learnable=False): [8.0, 8.0]
      (layers_w): ModuleList(
        (0): Sequential(
          (b0_l2norm_in): L2Normalize()
          (b0_fc): Linear(in_features=1024, out_features=4096, bias=False)
          (b0_bn): BatchNorm1d(4096, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (b0_rl): ReLU(inplace=True)
          (b0_last_layer): Linear(in_features=4096, out_features=2048, bias=True)
          (b0_l2norm_out): L2Normalize()
        )
        (1): Sequential(
          (b1_l2norm_in): L2Normalize()
          (b1_fc): Linear(in_features=2048, out_features=4096, bias=False)
          (b1_bn): BatchNorm1d(4096, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (b1_rl): ReLU(inplace=True)
          (b1_last_layer): Linear(in_features=4096, out_features=2048, bias=True)
          (b1_l2norm_out): L2Normalize()
        )
      )
    )
    (feature_extractor_teacher): ResNet(
      (_feature_blocks): ModuleList(
        (0): Sequential(
          (Conv): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
          (bn): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
        )
        (1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (downsample): Sequential(
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
        )
        (2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (downsample): Sequential(
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
              (1): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
        )
        (3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (downsample): Sequential(
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)
              (1): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
        )
        (4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (downsample): Sequential(
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)
              (1): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
        )
        (5): GlobalPooling(type=avg)
      )
    )
    (bow_extractor): BoWExtractorMultipleLevels(
      (bow_extractor): ModuleList(
        (0): BoWExtractor(num_words=8192, num_channels=1024, update_type=local_average, inv_delta=15, pool=max, decay=0.99, track_num_batches=0.0)
        (1): BoWExtractor(num_words=8192, num_channels=2048, update_type=local_average, inv_delta=15, pool=max, decay=0.99, track_num_batches=0.0)
      )
    )
    (linear_classifier): PredictionHead(
      (layers): Sequential(
        (pooling): GlobalPooling(type=avg)
        (batch_norm): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
        (flattening): Flatten(start_dim=1, end_dim=-1)
        (prediction_layer): Linear(in_features=2048, out_features=34, bias=True)
      )
    )
  )
)
2021-06-09 17:30:05,014 - obow.solver - INFO   - ==> Set lr for group 0: 0.0000000000
Traceback (most recent call last):
  File "main_obow.py", line 368, in <module>
    main()
  File "main_obow.py", line 179, in main
    torch.multiprocessing.spawn(
  File "/linkhome/rech/genens02/urm38kd/.conda/envs/vissl/lib/python3.8/site-packages/torch/multiprocessing/spawn.py", line 199, in spawn
    return start_processes(fn, args, nprocs, join, daemon, start_method='spawn')
  File "/linkhome/rech/genens02/urm38kd/.conda/envs/vissl/lib/python3.8/site-packages/torch/multiprocessing/spawn.py", line 157, in start_processes
    while not context.join():
  File "/linkhome/rech/genens02/urm38kd/.conda/envs/vissl/lib/python3.8/site-packages/torch/multiprocessing/spawn.py", line 118, in join
    raise Exception(msg)
Exception: 

-- Process 2 terminated with the following error:
Traceback (most recent call last):
  File "/linkhome/rech/genens02/urm38kd/.conda/envs/vissl/lib/python3.8/site-packages/torch/multiprocessing/spawn.py", line 19, in _wrap
    fn(i, *args)
  File "/gpfsdswork/projects/rech/ldr/urm38kd/workspace_yufei/ssl_cityscapes/obow_ssl_new/obow_ssl/main_obow.py", line 359, in main_worker
    solver.solve(
  File "/gpfsdswork/projects/rech/ldr/urm38kd/workspace_yufei/ssl_cityscapes/obow_ssl_new/obow_ssl/obow/solver.py", line 261, in solve
    self.run_train_epoch(loader_train, epoch)
  File "/gpfsdswork/projects/rech/ldr/urm38kd/workspace_yufei/ssl_cityscapes/obow_ssl_new/obow_ssl/obow/solver.py", line 296, in run_train_epoch
    self.train_step(mini_batch, metric_logger)
  File "/gpfsdswork/projects/rech/ldr/urm38kd/workspace_yufei/ssl_cityscapes/obow_ssl_new/obow_ssl/obow/builder_obow.py", line 654, in train_step
    assert len(logs) == (2*num_levels+1)
AssertionError

